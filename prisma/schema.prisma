// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id                String             @id @default(uuid())
  name              String
  email             String             @unique
  password          String
  createdAt         DateTime           @default(now())
  updatedAt         DateTime           @updatedAt
  expenses          Expense[]
  incomes           Income[]
  budgets           Budget[]
  recurringExpenses RecurringExpense[] // Tambahkan relasi ini
}

model Category {
  id                 String             @id @default(uuid())
  name               String
  description        String?
  createdAt          DateTime           @default(now())
  updatedAt          DateTime           @updatedAt
  expenses           Expense[]
  budgets            Budget[]
  recurringExpenses  RecurringExpense[] // Sudah ada relasi ini
}

model Expense {
  id          String    @id @default(uuid())
  user        User      @relation(fields: [userId], references: [id])
  userId      String
  category    Category  @relation(fields: [categoryId], references: [id])
  categoryId  String
  amount      Float
  description String?
  date        DateTime
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
}

model Income {
  id          String    @id @default(uuid())
  user        User      @relation(fields: [userId], references: [id])
  userId      String
  amount      Float
  source      String?
  date        DateTime
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
}

model Budget {
  id          String    @id @default(uuid())
  user        User      @relation(fields: [userId], references: [id])
  userId      String
  category    Category  @relation(fields: [categoryId], references: [id])
  categoryId  String
  amount      Float
  startDate   DateTime
  endDate     DateTime
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
}

model RecurringExpense {
  id          String    @id @default(uuid())
  user        User      @relation(fields: [userId], references: [id])
  userId      String
  category    Category  @relation(fields: [categoryId], references: [id])
  categoryId  String
  amount      Float
  description String?
  frequency   String    // contoh: "daily", "weekly", "monthly"
  startDate   DateTime
  endDate     DateTime?
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
}
